{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Data7 \u26a1 Open your data in minutes","text":"<p>Pronounced data\u00b7set (7 like sept in French).</p> <p> </p>"},{"location":"#the-idea","title":"The idea \ud83d\udca1","text":"<p>TL;DR Data7 is a high performance web server that generates dynamic datasets (in CSV or Parquet formats) from existing databases and streams them over HTTP \ud83c\udf89</p>"},{"location":"#a-quick-example","title":"A quick example","text":"<p>Let say you have a <code>restaurant</code> table in your PostgreSQL database, and you want to make this table an always-up-to-date dataset that can be easily used by the rest of the world.</p> <p>All you have to do is to initialize your project:</p> <pre><code>data7 init\n</code></pre> <p>\u270d\ufe0f Edit configuration files:</p> <pre><code># settings.yaml\nproduction:\n  host: \"https://data7.wonderful-places.org\"\n  port: 80\n\n# .secrets.yaml\nproduction:\n  DATABASE_URL: \"postgresql+asyncpg://user:pass@server:port/wonderful-places\"\n\n# data7.yaml\nproduction:\n  datasets:\n    - basename: restaurants\n      query: \"SELECT * FROM restaurant\"\n</code></pre> <p>\ud83c\udfce\ufe0f Fire up the <code>data7</code> server:</p> <pre><code>data7 run\n</code></pre> <p>\ud83d\udca5 Your dataset is available at:</p> <ul> <li>https://data7.wonderful-places.org/d/restaurants.csv   (CSV)</li> <li>https://data7.wonderful-places.org/d/restaurants.parquet   (Parquet)</li> </ul>"},{"location":"#documentation","title":"Documentation","text":"<p>The complete documentation of the project is avaiable at: https://jmaupetit.github.io/data7/</p>"},{"location":"#license","title":"License","text":"<p>This work is released under the MIT License.</p>"},{"location":"code_of_conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"code_of_conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"code_of_conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall   community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of   any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address,   without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"code_of_conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"code_of_conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official email address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"code_of_conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at abuse+data7@maupetit.net. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"code_of_conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"code_of_conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"code_of_conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"code_of_conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"code_of_conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"code_of_conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"commands/","title":"Command Line Interface (CLI)","text":""},{"location":"commands/#data7","title":"data7","text":"<p>Usage:</p> <pre><code>data7 [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n  --help                Show this message and exit.\n</code></pre>"},{"location":"commands/#check","title":"check","text":"<p>Check data7 project configuration.</p> <p>Checks:</p> <ol> <li> <p>all settings files SHOULD exist</p> </li> <li> <p>settings files format SHOULD be valid YAML</p> </li> <li> <p>configured database connection SHOUD be valid (driver installed and valid url)</p> </li> <li> <p>datasets SQL queries SHOULD be valid SQL</p> </li> </ol> <p>Usage:</p> <pre><code>data7 check [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/#init","title":"init","text":"<p>Initialize a data7 project.</p> <p>Usage:</p> <pre><code>data7 init [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/#run","title":"run","text":"<p>Run data7 web server.</p> <p>Usage:</p> <pre><code>data7 run [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --host TEXT\n  --port INTEGER\n  --reload / --no-reload          \\[default: no-reload]\n  --workers INTEGER\n  --root-path TEXT\n  --proxy-headers / --no-proxy-headers\n                                  \\[default: no-proxy-headers]\n  --log-level [debug|info|warning|error|critical]\n                                  \\[default: info]\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/#stream","title":"stream","text":"<p>Stream a dataset given its name and a selected extension.</p> <p>Usage:</p> <pre><code>data7 stream [OPTIONS] EXTENSION:{csv|parquet} NAME\n</code></pre> <p>Options:</p> <pre><code>  EXTENSION:{csv|parquet}  \\[required]\n  NAME                     \\[required]\n  --help                   Show this message and exit.\n</code></pre>"},{"location":"configuration/","title":"Configuration","text":"<p>Data7 configuration is splitted over three different files:</p> <ol> <li><code>settings.yaml</code>: general server configuration</li> <li><code>.secrets.yaml</code>: all sensible settings or credentials for Data7</li> <li><code>data7.yaml</code>: the datasets definition</li> </ol> <p>All configuraiton files respect general and specific rules that we will describe in detail in the following sections.</p>"},{"location":"configuration/#general-rules","title":"General rules","text":""},{"location":"configuration/#settings-can-be-defined-for-multiple-environments","title":"Settings can be defined for multiple environments","text":"<p>Data7 configuration management is based on the Dynaconf library. It supports defining settings given a particular environment. Meaning that you can define different values for the same setting depending on the environment your instance is associated with. By environment we mean, <code>development</code>, <code>testing</code>, <code>staging</code>, <code>production</code> to name a few.</p> <p>You can define as many environments as you need. If none is active for the current instance (more on this later), Data7 will look for a <code>default</code> configuration.</p> <pre><code># settings.yaml\ndefault:\n  # The default value if no other environment is defined or active\n  debug: false\n\ndevelopment:\n  debug: true\n\ntesting:\n  # Speed up tests\n  debug: false\n\nstaging:\n  # Better not expose logs publicly\n  debug: false\n\nproduction:\n  # Strongly recommended\n  debug: false\n</code></pre> <p>To activate a particular environment for your instance, you have two options:</p> <ol> <li>Define the <code>ENV_FOR_DYNACONF</code> environment variable with the environment name    you want to activate, e.g. <code>ENV_FOR_DYNACONF=staging</code>.</li> <li>Set the <code>ENV_FOR_DYNACONF</code> value in a <code>.env</code> file:</li> </ol> <pre><code>ENV_FOR_DYNACONF=development\n</code></pre>"},{"location":"configuration/#setting-names-are-case-insensitive","title":"Setting names are case-insensitive","text":"<p>This is an important rule: each setting can be define in upper or lower case, e.g. <code>debug</code> and <code>DEBUG</code> are the same setting.</p> <p>Tip for contributors</p> <p>As a consequence, you can define your settings in lower case because it's more readable in your YAML configuration:</p> <pre><code>debug: true\n</code></pre> <p>And use the upper case form in the code:</p> <pre><code>from data7.conf import settings\n\n\nprint(f\"{settings.DEBUG=}\")\n</code></pre>"},{"location":"configuration/#settings-can-be-overridden-using-environment-variables","title":"Settings can be overridden using environment variables","text":"<p>Every setting can be overridden by defining the corresponding environment variable (in uppercase) prefixed by <code>DATA7_</code>, e.g. for the <code>debug</code> setting, you can define the <code>DATA7_DEBUG=false</code> environment variable to override the value defined in the <code>settings.yaml</code> file.</p>"},{"location":"configuration/#use-data7-init-to-boostrap-your-configuration","title":"Use <code>data7 init</code> to boostrap your configuration","text":"<p>Data7 comes with a CLI that can help you boostraping your project (see the tutorial). Remember that the <code>data7 init</code> command will generate the three required configuration files for you. Once generated it's up to you to define your own environments and change setting values to suit your needs.</p>"},{"location":"configuration/#configuration-details","title":"Configuration details","text":""},{"location":"configuration/#settingsyaml","title":"<code>settings.yaml</code>","text":""},{"location":"configuration/#datasets_root_url","title":"<code>DATASETS_ROOT_URL</code>","text":"<p>The root URL that will prefix dataset URLs (e.g. the <code>/d</code> in <code>/d/invoices.csv</code> for the <code>invoices</code> dataset.)</p> <p>Default: <code>/d</code></p>"},{"location":"configuration/#chunk_size","title":"<code>CHUNK_SIZE</code>","text":"<p>Size of batches to process, i.e. the number of SQL query result rows to process at each iteration.</p> <p>Default: <code>5000</code></p>"},{"location":"configuration/#schema_sniffer_size","title":"<code>SCHEMA_SNIFFER_SIZE</code>","text":"<p>The number of SQL query result rows used to infer a table schema (data types).</p> <p>Default: <code>1000</code></p>"},{"location":"configuration/#default_dtype_backend","title":"<code>DEFAULT_DTYPE_BACKEND</code>","text":"<p>The backend used to infer data types while fetching data from the database. Possible values are: <code>numpy_nullable</code> or <code>pyarrow</code> (see Pandas documentation).</p> <p>Default: <code>pyarrow</code></p>"},{"location":"configuration/#profiler_interval","title":"<code>PROFILER_INTERVAL</code>","text":"<p>From pyinstrument's documentation:</p> <p>The minimum time, in seconds, between each stack sample. This translates into the resolution of the sampling.</p> <p>Default: <code>0.001</code></p>"},{"location":"configuration/#profiler_async_mode","title":"<code>PROFILER_ASYNC_MODE</code>","text":"<p>From pyinstrument's documentation:</p> <p>Configures how this Profiler tracks time in a program that uses async/await.</p> <p>Default: <code>enabled</code></p>"},{"location":"configuration/#debug","title":"<code>DEBUG</code>","text":"<p>Set to <code>true</code> to enable debugging mode, logs and server response will be more explicit.</p> <p>Default: <code>false</code></p> <p>Warning</p> <p>We strongly recommend to keep default <code>false</code> value when running Data7 in production.</p>"},{"location":"configuration/#profiling","title":"<code>PROFILING</code>","text":"<p>(De)Activate server request profiling. If set to <code>True</code>, adding the <code>?profile=1</code> argument to HTTP requests returns the profiling analysis instead of the expected requested dataset.</p> <p>Example query: http://localhost:8000/d/invoices.csv?profile=1</p> <p>Default: <code>false</code></p>"},{"location":"configuration/#host","title":"<code>HOST</code>","text":"<p>This is the host socket will be bind to. It can be an IPv4 or IPv6 address, or a fully qualified domain name (e.g. <code>data7.example.org</code>). Set this to <code>0.0.0.0</code> if you want your application to be available from your local network.</p> <p>Default: <code>None</code> (required)</p>"},{"location":"configuration/#port","title":"<code>PORT</code>","text":"<p>This the host port the socket will be bind to. It is classicaly set to <code>8000</code> for a Python application.</p> <p>Default: <code>None</code> (required)</p>"},{"location":"configuration/#execution_environment","title":"<code>EXECUTION_ENVIRONMENT</code>","text":"<p>Used by Sentry to track the environment of raised issue.</p> <p>Default: <code>None</code></p>"},{"location":"configuration/#sentry_dsn","title":"<code>SENTRY_DSN</code>","text":"<p>The DSN of your Sentry project, e.g. <code>https://account@sentry.io/project_id</code>. When not set, Sentry integration is not active.</p> <p>Default: <code>None</code></p>"},{"location":"configuration/#sentry_enable_tracing","title":"<code>SENTRY_ENABLE_TRACING</code>","text":"<p>Toggle Sentry performance tracking feature.</p> <p>Default: <code>True</code></p>"},{"location":"configuration/#sentry_traces_sample_rate","title":"<code>SENTRY_TRACES_SAMPLE_RATE</code>","text":"<p>The sample rate of traces sent to sentry: 1.0 means 100% while 0.1 means 10%. It should be adapted for production.</p> <p>Default: <code>1.0</code></p>"},{"location":"configuration/#sentry_profiles_sample_rate","title":"<code>SENTRY_PROFILES_SAMPLE_RATE</code>","text":"<p>The sample rate of profiles sent to sentry: 1.0 means 100% while 0.1 means 10%. It should be adapted for production.</p> <p>Default: <code>1.0</code></p>"},{"location":"configuration/#secretsyaml","title":"<code>.secrets.yaml</code>","text":""},{"location":"configuration/#database_url","title":"<code>DATABASE_URL</code>","text":"<p>The URL that will be used by Data7 for database connections. It uses the classical pattern:</p> <p><code>&lt;database engine&gt;://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;database name&gt;</code></p> <p>Info</p> <p>Data7 supports all asynchronous database engines supported by the databases library. Depending on your database engine, you may need to add the related database driver to your project dependencies.</p> <p>Supposing your database user is <code>data7</code>, its password is <code>secret</code> and the database name you will query is <code>chinook</code>, depending on the database engine and driver you want to use, here is a table that summarizes dependencies you need to install and <code>DATABASE_URL</code> example values.</p> Database Dependency Example value PostgreSQL <code>psycopg[binary,pool]</code> <code>postgresql+psycopg://data7:secret@localhost:5432/chinook</code> MySQL <code>mariadb-connector</code> <code>mysql://data7:secret@localhost:3306/chinook</code> SQLite - <code>sqlite:///chinook.db</code>"},{"location":"configuration/#data7yaml","title":"<code>data7.yaml</code>","text":""},{"location":"configuration/#datasets","title":"<code>DATASETS</code>","text":"<p>This is the core setting of your Data7 instance. <code>DATASETS</code> is a list of dataset definitions. Each dataset is defined by:</p> <ul> <li>a <code>basename</code>: the base name of your dataset will be used in its URL (e.g. <code>/d/invoices.csv</code> for the <code>invoices</code> basename) and thus the corresponding file   name when you will fetch its content.</li> <li>a <code>query</code>: the SQL query that will be executed to fetch data.</li> </ul> <p>You will find example definitions for the <code>development</code> environment:</p> <pre><code>datasets:\n  # Base dataset exposing all table records\n  #\n  - basename: invoices\n    query: \"SELECT * FROM Invoice\"\n\n  # A more complex dataset using related tables\n  #\n  - basename: tracks\n    query: &gt;-\n      SELECT Artist.Name as artist, Album.Title as title, Track.Name as track\n      FROM Artist\n      INNER JOIN Album ON Artist.ArtistId = Album.ArtistId\n      INNER JOIN Track ON Album.AlbumId = Track.AlbumId\n      ORDER BY Artist.Name, Album.Title\n</code></pre> <p>Tip</p> <p>Remember that this file's syntax should be validity YAML. Each database query should also be valid. You can check both YAML and SQL validity using the <code>data7 check</code> command.</p>"},{"location":"contribute/","title":"Playing with the code","text":""},{"location":"contribute/#install-dependencies","title":"Install dependencies","text":"<p>Contributing to Data7 requires the following dependencies to be installed:</p> <ul> <li>GNU Make</li> <li>Curl</li> <li>Poetry</li> </ul> <p>Note</p> <p>Depending on your operating system, use your favorite package manager (<code>brew</code>, <code>apt</code>, <code>pacman</code>, ...) to install them!</p>"},{"location":"contribute/#bootstrap-the-project","title":"Bootstrap the project","text":"<p>To quickly start contributing to this project, we've got you covered! Once you've forked/cloned the project, use GNU Make to ease your life:</p> <pre><code># Clone the forked project somewhere on your system\ngit clone git@github.com:my_username/data7.git\n\n# Enter the project's root directory\ncd data7\n\n# Prepare your working environment\nmake bootstrap\n</code></pre> <p>You can now start the development server:</p> <pre><code>make run\n</code></pre> <p>Test development endpoints:</p> <pre><code># CSV format (displayed in the terminal)\ncurl http://localhost:8000/d/invoices.csv\n\n# Parquet format (downloaded locally)\ncurl -O http://localhost:8000/d/invoices.parquet\n\n# Check that the file exists\nls invoices.parquet\n</code></pre>"},{"location":"contribute/#quality-checks","title":"Quality checks","text":"<p>You can run tests and linters using dedicated GNU Make rules:</p> <pre><code># Run the tests suite\nmake test\n\n# Linters!\nmake lint\n</code></pre> <p>Happy hacking \ud83d\ude3b</p>"},{"location":"guidelines/","title":"Guidelines","text":"<p>Thank you for considering contributing to data7! We appreciate your interest and support. This documentation provides guidelines on how to contribute effectively to our project.</p>"},{"location":"guidelines/#issues","title":"Issues","text":"<p>Issues are a valuable way to contribute. They can include bug reports, feature requests, and general questions or discussions. When creating or interacting with issues, please keep the following in mind:</p>"},{"location":"guidelines/#1-search-for-existing-issues","title":"1. Search for existing issues","text":"<p>Before creating a new issue, search the existing issues to see if your concern has already been raised. If you find a related issue, you can add your input or follow the discussion. Feel free to engage in discussions, offer help, or provide feedback on existing issues. Your input is valuable in shaping the project's future.</p>"},{"location":"guidelines/#2-creating-a-new-issue","title":"2. Creating a new issue","text":"<p>Use the provided issue template that fits the best to your concern. Provide as much information as possible when writing your issue. Your issue will be reviewed by a project maintainer and you may be offered to open a PR if you want to contribute to the code. If not, and if your issue is relevant, a contributor will apply the changes to the project. The issue will then be automatically closed when the PR is merged.</p> <p>Issues will be closed by project maintainers if they are deemed invalid. You can always reopen an issue if you believe it hasn't been adequately addressed.</p>"},{"location":"guidelines/#3-code-of-conduct-in-discussion","title":"3. Code of conduct in discussion","text":"<ul> <li>Be respectful and considerate when participating in discussions.</li> <li>Avoid using offensive language, and maintain a positive and collaborative   tone.</li> <li>Stay on topic and avoid derailing discussions.</li> </ul> <p>Note</p> <p>Before contributing, we invite you to read our complete code of conduct.</p>"},{"location":"guidelines/#discussions","title":"Discussions","text":"<p>Discussions in the Data7 repository are a place for open-ended conversations, questions, and general community interactions. Here's how to effectively use discussions:</p>"},{"location":"guidelines/#1-creating-a-discussion","title":"1. Creating a discussion","text":"<ul> <li>Use a clear and concise title that summarizes the topic.</li> <li>In the description, provide context and details regarding the discussion.</li> <li>Use labels to categorize the discussion (e.g., \"question,\" \"general   discussion,\" \"announcements,\" etc.).</li> </ul>"},{"location":"guidelines/#2-participating-in-discussions","title":"2. Participating in discussions","text":"<ul> <li>Engage in conversations respectfully, respecting others' opinions.</li> <li>Avoid spamming or making off-topic comments.</li> <li>Help answer questions when you can.</li> </ul> <p>Note</p> <p>Before contributing, we invite you to read our complete code of conduct.</p>"},{"location":"guidelines/#pull-requests-pr","title":"Pull Requests (PR)","text":"<p>Contributing to Data7 through pull requests is a powerful way to advance the project. If you want to make changes or add new features, please follow these steps to submit a PR:</p>"},{"location":"guidelines/#1-fork-the-repository","title":"1. Fork the repository","text":"<p>Begin by forking the project's repository.</p>"},{"location":"guidelines/#2-clone-the-fork","title":"2. Clone the fork","text":"<p>Clone the forked repository to your local machine and change the directory to the project folder using the following commands (replace <code>&lt;your_fork&gt;</code> with your GitHub username):</p> <pre><code>git clone https://github.com/&lt;your_fork&gt;/data7.git\ncd data7\n</code></pre>"},{"location":"guidelines/#3-create-a-new-branch","title":"3. Create a new branch","text":"<p>Create a new branch for your changes, ideally with a descriptive name:</p> <pre><code>git checkout -b your-new-feature\n</code></pre>"},{"location":"guidelines/#4-make-changes","title":"4. Make changes","text":"<p>Implement the changes or additions to the code, ensuring it follows coding and documentation standards.</p> <p>For comprehensive guidance on starting your development journey with Data7 and preparing your pull request, please refer to our dedicated tutorials.</p> <p>When committing your changes, please adhere to OpenFUN commit practices. Follow the low granularity commit splitting approach and use commit messages based on the Angular commit message guidelines.</p>"},{"location":"guidelines/#5-push-changes","title":"5. Push changes","text":"<p>Push your branch to your GitHub repository:</p> <pre><code>git push origin feature/your-new-feature\n</code></pre>"},{"location":"guidelines/#6-create-a-pull-request","title":"6. Create a pull request","text":"<p>To initiate a Pull Request (PR), head to Data7 project's GitHub repository and click on New Pull Request.</p> <p>Set your branch as the source and Data7 project's <code>main</code> branch as the target.</p> <p>Provide a clear title for your PR and make use of the provided PR body template to document the changes made by your PR. This helps streamline the review process and maintain a well-documented project history.</p>"},{"location":"guidelines/#7-review-and-discussion","title":"7. Review and discussion","text":"<p>Data7 project maintainers will review your PR. Be prepared to make necessary changes or address any feedback. Patience during this process is appreciated.</p>"},{"location":"guidelines/#8-merge","title":"8. Merge","text":"<p>Once your PR is approved, Data7 maintainers will merge your changes into the main project. Congratulations, you've successfully contributed to Data7! \ud83c\udf89</p>"},{"location":"guidelines/#releases","title":"Releases","text":""},{"location":"guidelines/#working-on-a-new-release","title":"Working on a new release","text":"<p>This project follows OpenFUN's standard process to release a new version. We invite you to read their handbook that describes it into details.</p>"},{"location":"tutorial/","title":"Tutorial","text":"<p>In this tutorial, you will learn how to set up a Data7 project using the Chinook database. Your project will be named <code>open-chinook</code>.</p>"},{"location":"tutorial/#install-data7","title":"Install Data7","text":"<p>Data7 is a pure Python package hosted in PyPI. It can be installed using your favorite package manager.</p> PipPipenvPoetry <pre><code># Create a directory for our new project\nmkdir open-chinook\ncd open-chinook\n\n# Create a virtual environment to work with\npython -m venv venv\nsource venv/bin/activate\n\n# Install data7 with pip (in the active virtual environment)\npip install data7\n</code></pre> <pre><code># Create a directory for our new project\nmkdir open-chinook\ncd open-chinook\n\n# Set python release and create a virtual environment\npipenv --python 3.11\n\n# Add data7 as a project dependency\npipenv add data7\n</code></pre> <pre><code># Create a directory for our new project\nmkdir open-chinook\ncd open-chinook\n\n# Set up a new poetry project\npoetry init\n\n# Add data7 as a project dependency\npoetry add data7\n</code></pre> <p>Once installed, it comes with a CLI. As long as the installation directory is in your <code>PATH</code>, the <code>data7</code> command can be invoked as follow:</p> PipPipenvPoetry <pre><code>data7 --help\n</code></pre> <pre><code>pipenv run data7 --help\n</code></pre> <pre><code>poetry run data7 --help\n</code></pre> <p>Expected command usage output should look like the following:</p> <pre><code> Usage: data7 [OPTIONS] COMMAND [ARGS]...\n\n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --install-completion          Install completion for the current shell. \u2502\n\u2502 --show-completion             Show completion for the current shell, to \u2502\n\u2502                               copy it or customize the installation.    \u2502\n\u2502 --help                        Show this message and exit.               \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\u256d\u2500 Commands \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 check   Check data7 project configuration.                              \u2502\n\u2502 init    Initialize a data7 project.                                     \u2502\n\u2502 run     Run data7 web server.                                           \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n</code></pre>"},{"location":"tutorial/#download-the-chinook-database","title":"Download the Chinook database","text":"<p>As we need data to expose in this tutorial, we will download the excellent Chinook database in SQLite format using your favorite tool to do so:</p> CurlWget <pre><code>curl -Lo chinook.db \\\n  https://github.com/lerocha/chinook-database/releases/download/v1.4.5/Chinook_Sqlite.sqlite\n</code></pre> <pre><code>wget -O chinook.db \\\n  https://github.com/lerocha/chinook-database/releases/download/v1.4.5/Chinook_Sqlite.sqlite\n</code></pre> <p>Make sure downloaded databases exists and is not empty (expected size should be approximatively 1Mo):</p> <pre><code>du -sh chinook.db\n</code></pre> <p>Chinook database schema is available from the project's repository:</p> <p></p>"},{"location":"tutorial/#initialize-the-project","title":"Initialize the project","text":"<p>Data7 requires few configuration files to be created before firing up the web server. Those can be created using the <code>data7 init</code> command.</p> PipPipenvPoetry <pre><code>data7 init\n</code></pre> <pre><code>pipenv run data7 init\n</code></pre> <pre><code>poetry run data7 init\n</code></pre> <p>Three configuration files should have been created:</p> <ul> <li><code>settings.yaml</code>: general application settings</li> <li><code>data7.yaml</code>: exposed datasets configuration</li> <li><code>.secrets.yaml</code>: private credentials such as the database connection URL</li> </ul> settings.yaml.secrets.yamldata7.yaml <pre><code>#\n# Data7 application general settings\n#\n\n# ---- GLOBAL ----------------------------------\nglobal:\n  # The base url path for dataset urls\n  datasets_root_url: \"/d\"\n\n  # Pandas chunks\n  chunk_size: 5000\n  schema_sniffer_size: 1000\n  default_dtype_backend: pyarrow\n\n  # Pyinstrument\n  profiler_interval: 0.001\n  profiler_async_mode: enabled\n\n# ---- DEFAULT ---------------------------------\ndefault:\n  # Set debug to true for development, never for production!\n  debug: false\n\n  # Server\n  # host:\n  # port:\n\n  # Sentry\n  sentry_dsn: null\n  sentry_traces_sample_rate: 1.0\n\n  # Pyinstrument\n  profiling: false\n\n# ---- PRODUCTION ------------------------------\nproduction:\n  execution_environment: production\n\n  # Set debug to true for development, never for production!\n  debug: false\n\n  # Server\n  # host: data7.example.com\n  # port: 8080\n\n  # Sentry\n  # sentry_dsn:\n  # sentry_traces_sample_rate: 1.0\n\n  # Pyinstrument\n  profiling: false\n\n#\n# /!\\ FEEL FREE TO REMOVE ENVIRONMENTS BELOW /!\\\n#\n# ---- DEVELOPMENT -----------------------------\ndevelopment:\n  execution_environment: development\n  debug: true\n\n  # Server\n  host: \"127.0.0.1\"\n  port: 8000\n\n  # Pyinstrument\n  profiling: true\n\n# ---- TESTING ---------------------------------\ntesting:\n  execution_environment: testing\n</code></pre> <pre><code>#\n# Data7 secrets.\n#\n# Feel free to adapt this file given your needs and environment.\n#\n\n# ---- DEFAULT ---------------------------------\ndefault:\n  # DATABASE_URL: \"sqlite:///example.db\"\n\n# ---- PRODUCTION ------------------------------\nproduction:\n  # DATABASE_URL: \"sqlite:///example.db\"\n\n#\n# /!\\ FEEL FREE TO REMOVE ENVIRONMENTS BELOW /!\\\n#\n# ---- DEVELOPMENT -----------------------------\ndevelopment:\n  DATABASE_URL: \"sqlite:///db/development.db\"\n\n# ---- TESTING ---------------------------------\ntesting:\n  DATABASE_URL: \"sqlite:///db/tests.db\"\n</code></pre> <pre><code>#\n# Data7 datasets definition.\n#\n# Feel free to adapt this file given your needs and environment.\n#\n\n# ---- DEFAULT ---------------------------------\ndefault:\n  datasets: []\n\n# ---- PRODUCTION ------------------------------\nproduction:\n  datasets: []\n\n#\n# /!\\ FEEL FREE TO REMOVE ENVIRONMENTS BELOW /!\\\n#\n# ---- DEVELOPMENT -----------------------------\ndevelopment:\n  datasets:\n    - basename: invoices\n      query: \"SELECT * FROM Invoice\"\n    - basename: tracks\n      query: &gt;-\n        SELECT Artist.Name as artist, Album.Title as title, Track.Name as track\n        FROM Artist\n        INNER JOIN Album ON Artist.ArtistId = Album.ArtistId\n        INNER JOIN Track ON Album.AlbumId = Track.AlbumId\n        ORDER BY Artist.Name, Album.Title\n\n# ---- TESTING ---------------------------------\ntesting:\n  datasets:\n    - basename: dummy\n      query: \"SELECT 1\"\n</code></pre> <p>Tip</p> <p>As you may have noticed, Data7 supports configuring your application for multiple environments (e.g. development, testing, staging, production, etc.). In the following example, we will set up our environment as <code>development</code> by creating a <code>.env</code> file at the project root as follow:</p> <pre><code>echo \"ENV_FOR_DYNACONF=development\" &gt; .env\n</code></pre>"},{"location":"tutorial/#configure-data7","title":"Configure Data7","text":"<p>Before running our application, we need to set/check default example settings for the development environment. First make sure that the development <code>DATABASE_URL</code> points to downloaded Chinook database in the <code>.secrets.yaml</code> file:</p> <pre><code># .secrets.yaml\ndevelopment:\n  DATABASE_URL: \"sqlite:///chinook.db\"\n</code></pre> <p>And check what datasets are defined in the <code>data7.yaml</code> file:</p> <pre><code># data7.yaml\ndevelopment:\n  datasets:\n    - basename: invoices\n      query: \"SELECT * FROM Invoice\"\n    - basename: tracks\n      query: &gt;-\n        SELECT Artist.Name as artist, Album.Title as title, Track.Name as track\n        FROM Artist\n        INNER JOIN Album ON Artist.ArtistId = Album.ArtistId\n        INNER JOIN Track ON Album.AlbumId = Track.AlbumId\n        ORDER BY Artist.Name, Album.Title\n</code></pre> <p>With this configuration, we expect to expose two datasets (<code>invoices</code> and <code>tracks</code>). The <code>invoices</code> dataset is a pretty simple SQL table export while the <code>tracks</code> dataset corresponds to a more complex query involving multiple SQL tables.</p> <p>Warning</p> <p>The default configuration (<code>settings.yaml</code>) used to develop the Data7 project has been left untouched as it is perfectly fine for this tutorial. For a production environment, we invite you to properly set the <code>host</code> and <code>port</code> definitions.</p>"},{"location":"tutorial/#validate-configuration","title":"Validate configuration","text":"<p>To verify that your configuration respects project's requirements, Data7 comes with a <code>data7 check</code> command. It can be handy to debug common issues you may have while setting up your project.</p> PipPipenvPoetry <pre><code>data7 check\n</code></pre> <pre><code>pipenv run data7 check\n</code></pre> <pre><code>poetry run data7 check\n</code></pre> <p>If things are not properly configured, the command output will let you know what seems buggy.</p>"},{"location":"tutorial/#run-the-server","title":"Run the server","text":"<p>Now that everything is perfectly configured, you can run the Data7 server using the <code>run</code> command:</p> PipPipenvPoetry <pre><code>data7 run\n</code></pre> <pre><code>pipenv run data7 run\n</code></pre> <pre><code>poetry run data7 run\n</code></pre> <p>And \ud83d\udca5 your Data7 server is running at: localhost:8000</p> <p>Tip</p> <p>The development server listen to the <code>8000</code> port, if it's already in use, you may want to change the <code>port</code> setting (for the <code>development</code> environment) in the <code>settings.yaml</code> file or run the above command using another port:</p> PipPipenvPoetry <pre><code>data7 run --port 8080\n</code></pre> <pre><code>pipenv run data7 run --port 8080\n</code></pre> <pre><code>poetry run data7 run --port 8080\n</code></pre> <p>If you are curious and test the root URL of your server, it should respond with a 404 HTTP code (not found). This is perfectly expected as Data7 only serves configured datasets following this pattern: <code>/d/&lt;dataset basename&gt;.&lt;dataset extension&gt;</code>. For the <code>invoices</code> dataset (see configuration above), it means that the two following endpoints should respond properly:</p> <ul> <li>localhost:8000/d/invoices.csv</li> <li>localhost:8000/d/invoices.parquet</li> </ul> <p>You can test those using your favorite tool:</p> CurlWget <p>The following command should display a CSV file in your terminal:</p> <pre><code>curl localhost:8000/d/invoices.csv\n</code></pre> <p>Or download it in Parquet format:</p> <pre><code>curl -O localhost:8000/d/invoices.parquet\n</code></pre> <p>The following command should download an <code>invoices.csv</code> file locally:</p> <pre><code>wget localhost:8000/d/invoices.csv\n</code></pre> <p>You can also test with the Parquet format:</p> <pre><code>wget localhost:8000/d/invoices.parquet\n</code></pre> <p>Question</p> <p>As you may have noticed, we've also defined a <code>tracks</code> dataset. We invite you to also test it following the previously defined URL pattern. And if you are curious, explore the Chinook database schema and be creative: create new datasets using more complex SQL queries. \ud83d\udcaa</p>"},{"location":"tutorial/#wrap-up","title":"Wrap up","text":"<p>In this tutorial, you have learned to create a new Data7 project from scratch. The next step for real life usage is to connect Data7 with your production database (PostgreSQL, MariaDB, etc.) and define your own datasets.</p> <p>Keep it up!</p>"}]}